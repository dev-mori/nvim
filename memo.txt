https://github.com/anthropics/claude-code
nodeのインストールとclaude-codeのインストール
`npm install -g @anthropic-ai/claude-code`

https://github.com/greggh/claude-code.nvim?tab=readme-ov-file

claude-codeがmodel変更できないっぽい

claude-codeでもエージェントっぽく行けるかもしれないが、コストが高いので安めでいくなら↓
cool-clineでsonnet3-haikuを使うのが良さそう
cool-clineはvscodeの拡張機能なのでvscodeで使う
https://github.com/yetone/avante.nvimだったらnvimでも使えそうだが、cursorベースっぽいので権限管理周りが冗長な可能性

haikuはだいぶ安いけど性能が少々心配
4oが定額で使えるとしたらcopilot agentのほうがいいかもしれない

copilot agentが定額でsonnet3.7とかも使い放題っぽい（一時的なレートリミットとかはありかもだけど）
これ最強かもしれない


フロントエンドテスト戦略
テスティングトロフィー

tanstack-query人気すごいな

負荷テストの504の要因は、ターゲットで処理できる量を超えたリクエストが飛んできて、スタックしてる可能性がある
504 Gateway Timeout → ターゲットがレスポンスを返さなかった

スムーズなスケールアウトのために
- CPU使用率などの閾値を低めてみる
- タスク起動の高速化（コンテナイメージの軽量化など）
- 最小タスクを２以上にしておく

localのlog_levelをinfoにしてタスクのログとおなじになるか確認してみる

cloudwatch logs insightsで、特定のロググループのログを検索する

fields @timestamp, @message
| filter @message like "ERROR" or @message like "Timeout" or @message like "Memory limit exceeded"
| sort @timestamp desc
| limit 100

こんなんとか

fields @timestamp, @message
| filter @logStream like "my-app"
| filter @message like "Request timed out"
| sort @timestamp desc
| limit 50

こんなんとか


メモリの使用量を確認する
# メモリを大量に消費しているプロセスを特定
ps aux --sort=-%mem | head -10
# メモリ使用量の推移をリアルタイムで監視
top -o %MEM
# プロセスのメモリキャッシュ状況を確認
free -h


distributed load testing (DLT)はJMeterで制御したほうがいいかもしれない(rpmとか)
